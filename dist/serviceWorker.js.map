{"version":3,"sources":["serviceWorker.js"],"names":["VERSION","self","addEventListener","event","waitUntil","precache","request","method","respondWith","cachedResponse","updateCache","cache","caches","open","addAll","match","response","fetch","put"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,IAAhB;AAEAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAAAC,KAAK,EAAI;AACtCA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAQ,EAAxB;AACH,CAFD;AAGAJ,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,KAAK,EAAI;AACpC,MAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB;;AACA,MAAGA,OAAO,CAACC,MAAR,KAAmB,KAAtB,EAA4B;AACxB;AACH,GAJmC,CAKpC;;;AACAJ,EAAAA,KAAK,CAACK,WAAN,CAAkBC,cAAc,CAACH,OAAD,CAAhC,EANoC,CAOpC;;AACAH,EAAAA,KAAK,CAACC,SAAN,CAAgBM,WAAW,CAACJ,OAAD,CAA3B;AACH,CATD;;SAWeD;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUM,YAAAA,KADV,GACkBC,MAAM,CAACC,IAAP,CAAY,SAAZ,CADlB;AAAA;AAAA,mBAEWF,KAFX;;AAAA;AAAA,0BAEkBG,MAFlB,CAEyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARyB,aAFzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAceL;;;;;4EAAf,kBAA8BH,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBM,MAAM,CAACC,IAAP,CAAY,SAAZ,CADxB;;AAAA;AACUF,YAAAA,KADV;AAAA;AAAA,mBAE2BA,KAAK,CAACI,KAAN,CAAYT,OAAZ,CAF3B;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAIWA,QAAQ,IAAIC,KAAK,CAACX,OAAD,CAJ5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAOeI;;;;;yEAAf,kBAA2BJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBM,MAAM,CAACC,IAAP,CAAY,SAAZ,CADxB;;AAAA;AACUF,YAAAA,KADV;AAAA;AAAA,mBAE2BM,KAAK,CAACX,OAAD,CAFhC;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAGWL,KAAK,CAACO,GAAN,CAAUZ,OAAV,EAAmBU,QAAnB,CAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"serviceWorker.js","sourceRoot":"..","sourcesContent":["const VERSION = 'v1';\n\nself.addEventListener('install', event => {\n    event.waitUntil(precache());\n});\nself.addEventListener('fetch', event => {\n    const request = event.request;\n    if(request.method !== 'GET'){\n        return;\n    }\n    //search for the resource in cache\n    event.respondWith(cachedResponse(request));\n    //update the cache\n    event.waitUntil(updateCache(request));\n});\n\nasync function precache(){\n    const cache = caches.open('VERSION');\n    (await cache).addAll([\n/*         '/',\n        '/index.html',\n        '/assets/index.js',\n        '/assets/SimpleMediaPlayer.js',\n        '/assets/plugins/AutoPlay.js',\n        '/assets/plugins/AutoPause.ts',\n        '/assets/index.css',\n        '/assets/video.mp4', */\n        ])\n}\n\nasync function cachedResponse(request){\n    const cache = await caches.open('VERSION');\n    const response = await cache.match(request);\n    //fetch(request) in case response is undefined\n    return response || fetch(request);\n}\n\nasync function updateCache(request){\n    const cache = await caches.open('VERSION');\n    const response = await fetch(request);\n    return cache.put(request, response);\n}\n"]}